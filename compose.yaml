services:
  db:
    container_name: pgctf2_db
    image: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: pg
      POSTGRES_PASSWORD: password
    volumes:
      - db-data:/var/lib/postgresql/data:delegated
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U pg -d postgres']
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 30s

  web:
    container_name: pgctf2_web
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
    volumes:
      - ./server:/app
      - ./openapi:/app/openapi
    ports:
      - "8080:8080"
    env_file:
      - ./server/.env
    depends_on:
      db:
        condition: service_healthy
    command: >
      /bin/sh -c
      'python manage.py runserver 0.0.0.0:8080'

  # Swagger yamlの配信をDjango側に任せたので不要になった
  # nginx:
  #   container_name: pgctf2_nginx
  #   build:
  #     context: .
  #     dockerfile: ./docker/nginx/Dockerfile
  #     target: dev
  #   environment:
  #     SERVER_HOST: web
  #   volumes:
  #     - ./openapi:/var/www/schema
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - web

  minio:
    container_name: pgctf2_minio
    image: minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data:delegated
    command: ['server', '--console-address', ':9001', '--compat', '/data']
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 1s
      retries: 10

  createbuckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb myminio/pgctf-bucket;
      /usr/bin/mc policy set public myminio/pgctf-bucket;
      exit 0;
      "

volumes:
  db-data:
    name: pgctf2-dbdata
    external: true
  minio-data:
    name: pgctf2-miniodata
    external: true

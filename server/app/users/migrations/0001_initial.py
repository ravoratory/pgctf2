# Generated by Django 4.1.1 on 2022-09-24 16:10

import django.core.validators
from django.db import migrations, models
import django.utils.timezone
import users.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('username', models.CharField(error_messages={'unique': 'このユーザー名は既に使用されています'}, help_text="ユーザー名は4~30文字の英数字と'_'が使用できます", max_length=30, unique=True, validators=[users.models.UsernameValidator(), django.core.validators.MinLengthValidator(4)], verbose_name='Username')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('date_started', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='CTF開始時間')),
                ('is_staff', models.BooleanField(default=False, help_text='管理サイトにログインできるかを指定します。')),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
    ]

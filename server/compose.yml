services:
  db:
    container_name: pgctf2_db
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=pg
      - POSTGRES_PASSWORD=password
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pg -d postgres "]
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 30s

  web:
    container_name: pgctf2_web
    build: ./app
    volumes:
      - ./app:/code
    ports:
      - '8080:8080'
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    command: >
      /bin/sh -c
        'python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8080'

  minio:
    container_name: pgctf2_minio
    image: minio/minio
    ports:
      - '9000:9000'
      - '9090:9090'
    environment:
      MINIO_ROOT_USER: 'minio'
      MINIO_ROOT_PASSWORD: 'password'
    command: ['server', '--console-address', ':9090', '--compat', '/data']

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set myminio http://minio:9000 minio password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb myminio/pgctf-bucket;
      /usr/bin/mc policy set public myminio/pgctf-bucket;
      exit 0;
      "
